/*
* @Author: 灵岩寺
* @Date:   2015-08-25 10:52:48
* @Last Modified by:   灵岩寺
* @Last Modified time: 2015-08-25 13:58:08
*/

'use strict';

// 在工作经验方面，实话事实不能说太多的，因为有的时候，这并不能反映一个人的真实能力。
还有面试前要总结好自己的语言。对于会被问到的问题，要提前总结好，这样显得自己更有逻辑性 ￣□￣｜｜。
比如上次面试，问道backbone，让我简单介绍下，然后我就语无伦次了
// ----------------------------------------------------------------------------
--->自我介绍一下
两位好，我叫王勇，勇敢的勇，河南人，毕业于河南理工大学。
去年八月份开始从事前端工作，总共有一年多一点。
之前在杭州米趣工作，杭州米趣旗下主营两款app，多聚、网娱大师，还有其他一些游戏项目。
其中多聚是一款社交软件，我就是负责多聚app的web相关项目，比如说app官网、微网站、app内嵌H5页面、还有活动页面之类的。
学习方面，一般情况下，我是通过MDN、技术博客、微博、知乎、或者是segmentfault来补充知识的。
最近有在学习es6。对node有了解。

// --------------------------------------------------------------------------------。
--->你说你熟悉backbone，能不能简单介绍一下？
backbone是一个mvc框架，主要是用在有大量数据交互的项目。
它提供了类似于object.observe的数据监听功能，以此做到了数据驱动的功能。
数据驱动，就在一个对象的属性被修改，一个数组被增删改的时候，可以去重新渲染视图层或者

backbone所做到的数据监听，使用的应该是比较原始的一种方法
比如说数组的增删改，他不是使用数组的push,splice,unshift等原生方法，而是自己新增加一个类似方法，然后再去调用原生的方法

其实假如项目只需要支持现代浏览器的话，可以使用 object.defineProperty这个方法可以实现监听效果
vue.js就是这么做的。

如果浏览器全支持es6的话，还可以使用proxy代理
支持es7的话，就可以使用Object.observe了

// ----------------------------------------------------------------------------------
--->在使用reactjs？简单介绍下
reactjs是facebook出的前端view层的库，他只是负责view层，不想angular还会负责model层

reactjs特点
一是：  virtual dom，
他的实现是通过在js中映射一个html文档树的对象
然后在数据脏检查的时候，检查的是js对象，而不是dom，所以说他的速度要更快一些
附：dom慢，是因为，一个dom，并不只是这个dom本身，还和它所处的上下文有关
    比如说修改一个dom，就会导致整个文档的repaint/reflow

二是：  组件的概念
组件的概念和w3c提出的web component类似，Google的polymer就是在做这方面的事情
html5中的input元素其实就一个web component
组件的作用，在于抽象和封装，就好像一个元素标签 他其实代表的是 一个html/css/js的组合
其内部的文件不受外部文件的影响，就像js中的局部作用域的概念
组建可以有状态，可以和其他组件进行数据交换

三是：  react的jsx
react的jsx也是一个大的创新，js和html混写，这样做的好处是逻辑更清晰了

但说了这么多，并没有什么用，因为没有具体的reactjs项目经验。

// ---------------------------------------------------------------------------------
--->说说nodejs学了什么？

nodejs的话只是段续续的看了看，
个人用node使用在这几方面吧，
1.搭建一个本地的http服务
2.有时候koa调试一些请求接口
3.一些sublime插件需要node的支持
4.使用gulp来处理一些文件，比如js文件打包，css后处理等。
webpack没用过

// ----------------------------------------------------------------------------------
--->自己做过哪些有意思的东西？

1.尝试实现过zepto
2.写过基于audio标签的播放器，界面类似于虾米
3.还写过一个slider，一般前段分享，喜欢用的类似于ppt的那个东西，是基于hashchange实现的
4.写过基于localstorage的本地评论插件
5.还写过移动端的滑动组建，基于touchevent，还有就是做了一点基于 visibility的性能优化
6.有尝试着写过富文本编辑器，不过功能很简陋，还有些兼容性问题
7.做过一点singlepageApp的东西，是基于html5的history API实现的
8.还有，现在在尝试着做基于object.defineObject的双向绑定，有点自不量力，但是做一遍，才能掌握更多知识
9.其他的到没什么了，图片懒加载，日历插件之类的吧

// ------------------------------------------------------------------------------
--->做过那些，前端性能优化的工作？
-> CSS方面
1.使用base64字符串，来替代图片文件
2.使用transform来替代绝对定位,transform的性能要更好，
    因为使用transform的时候，并不会引起浏览器的repaint/reflow，而修改left/top之类的会，因此性能更好

-> JS方面
1.比如说合并js文件，减少请求数量
2.减少直接操作dom
3.访问局部变量来替代全局变量
4.避免使用with，eval语句，使用闭包的时候要注意，避免造成内存泄漏
5.如果有大量字符串需要拼接的话 使用 Array.prototype.join() 要比+性能好一点






